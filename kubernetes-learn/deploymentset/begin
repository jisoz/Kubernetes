deploy -> replicaset -> pod

- In Kubernetes, a Deployment is an object that manages a set of replicas of a Pod, ensuring that the desired number of replicas are running at all times. A DeploymentSet is not an official Kubernetes term, but you may be referring to a Deployment that manages a set of Pods, or a ReplicaSet, which is closely related to Deployments in Kubernetes.

Key Concepts
Pod: The smallest deployable unit in Kubernetes, which represents a single instance of a running process.
ReplicaSet: Ensures that a specified number of replica Pods are running at any given time. ReplicaSets are typically controlled by Deployments.
Deployment: A higher-level abstraction that manages ReplicaSets and provides features like rolling updates, scaling, and self-healing.
Deployment Example
A Deployment is used to create and manage a set of Pods and ReplicaSets. Hereâ€™s a simple example of a Deployment YAML file.

<!-- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3  # The number of Pods to maintain
  selector:
    matchLabels:
      app: nginx  # The label to match the Pods
  template:
    metadata:
      labels:
        app: nginx  # Label for Pods
    spec:
      containers:
      - name: nginx
        image: nginx:latest  # The container image to use
        ports:
        - containerPort: 80  # Expose port 80 in the container -->

