piVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80



Certainly! Below is a simple YAML configuration for a Kubernetes Deployment that will manage and ensure the desired state of an Nginx Pod:

yaml
Copy code
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
# Explanation:
# apiVersion: apps/v1: Specifies the API version to use. For Deployments, it's apps/v1.
# kind: Deployment: Defines the kind of Kubernetes object being created, which is a Deployment in this case.
# metadata: Contains metadata about the Deployment.
# name: nginx-deployment: The name of the Deployment.
# labels: Key-value pairs to categorize the Deployment. Here, it's labeled as app: nginx.
# spec: Defines the specification of the Deployment.
# replicas: 3: Specifies the number of desired replicas (pods) to be running.
# selector: Defines how the Deployment finds which pods to manage.
# matchLabels: Selects the pods with the label app: nginx.
# template: Defines the pod template, which includes metadata and the specification for the pod.
# metadata: Contains metadata about the pod template.
# labels: Labels assigned to the pods created by the Deployment. Here, it's labeled as app: nginx.
# spec: Defines the specification of the pods.
# containers: Lists the containers that will run inside the pod.
# name: nginx: The name of the container.
# image: nginx
# : The Docker image to use for the container. nginx:latest refers to the latest version of the Nginx image.
# ports: Defines the ports that the container exposes.
# containerPort: 80: The port on which Nginx will listen inside the container.